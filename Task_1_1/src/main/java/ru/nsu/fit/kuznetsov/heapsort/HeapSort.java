/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.nsu.fit.kuznetsov.heapsort;

/** This class allows us to use heap sort. */
public class HeapSort {
  /**
   * Sort an array using heap sort.
   *
   * @param arr the array to be sorted
   */
  public static void sort(int arr[]) {
    int n = arr.length;

    for (int i = n / 2 - 1; i >= 0; i--) {
      siftDown(arr, n, i);
    }
    for (int i = n - 1; i >= 0; i--) {
      int temp = arr[0];
      arr[0] = arr[i];
      arr[i] = temp;
      siftDown(arr, i, 0);
    }
  }

  /**
   * Sift down the element and change our heap.
   *
   * @param heap the heap to be changed
   * @param len the size of heap
   * @param idx the index of element which has to be sifted
   */
  private static void siftDown(int heap[], int len, int idx) {
    int largest = idx;
    int l = 2 * idx + 1;
    int r = 2 * idx + 2;
    if (l < len && heap[l] > heap[largest]) {
      largest = l;
    }
    if (r < len && heap[r] > heap[largest]) {
      largest = r;
    }
    if (largest != idx) {
      int swap = heap[idx];
      heap[idx] = heap[largest];
      heap[largest] = swap;
      siftDown(heap, len, largest);
    }
  }

  public static void main(String[] args) {}
}
